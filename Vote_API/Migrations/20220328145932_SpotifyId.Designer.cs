// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Vote_API.Dal;

#nullable disable

namespace Vote_API.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20220328145932_SpotifyId")]
    partial class SpotifyId
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Vote_API.Models.Dto.PlaylistVoteDto", b =>
                {
                    b.Property<Guid>("Uuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("SpotifyPlaylistUuid")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("VoteDataUuid")
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("VoteablePlaylistDtoUuid")
                        .HasColumnType("char(36)");

                    b.HasKey("Uuid");

                    b.HasIndex("VoteablePlaylistDtoUuid");

                    b.ToTable("PlaylistVote");
                });

            modelBuilder.Entity("Vote_API.Models.Dto.SpotifyPlaylistSongDto", b =>
                {
                    b.Property<Guid>("Uuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("ArtistName")
                        .HasColumnType("longtext");

                    b.Property<Guid>("PlaylistUuid")
                        .HasColumnType("char(36)");

                    b.Property<string>("SongImageUrl")
                        .HasColumnType("longtext");

                    b.Property<string>("SongName")
                        .HasColumnType("longtext");

                    b.Property<Guid?>("VoteablePlaylistDtoUuid")
                        .HasColumnType("char(36)");

                    b.HasKey("Uuid");

                    b.HasIndex("VoteablePlaylistDtoUuid");

                    b.ToTable("SpotifyPlaylistSongDto");
                });

            modelBuilder.Entity("Vote_API.Models.Dto.VoteablePlaylistDto", b =>
                {
                    b.Property<Guid>("Uuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("PlaylistImageUrl")
                        .HasColumnType("longtext");

                    b.Property<string>("PlaylistName")
                        .HasColumnType("longtext");

                    b.Property<string>("SpotifyPlaylistId")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<Guid?>("VoteDataDtoUuid")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("VoteDataUuid")
                        .HasColumnType("char(36)");

                    b.HasKey("Uuid");

                    b.HasIndex("VoteDataDtoUuid");

                    b.ToTable("VoteablePlaylistDto");
                });

            modelBuilder.Entity("Vote_API.Models.Dto.VoteDataDto", b =>
                {
                    b.Property<Guid>("Uuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("AuthorUserUuid")
                        .HasColumnType("char(36)");

                    b.Property<string>("JoinCode")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Password")
                        .HasColumnType("longtext");

                    b.Property<byte[]>("Salt")
                        .HasColumnType("longblob");

                    b.Property<DateTime>("ValidUntil")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Uuid");

                    b.ToTable("VoteData");
                });

            modelBuilder.Entity("Vote_API.Models.Dto.PlaylistVoteDto", b =>
                {
                    b.HasOne("Vote_API.Models.Dto.VoteablePlaylistDto", null)
                        .WithMany("Votes")
                        .HasForeignKey("VoteablePlaylistDtoUuid");
                });

            modelBuilder.Entity("Vote_API.Models.Dto.SpotifyPlaylistSongDto", b =>
                {
                    b.HasOne("Vote_API.Models.Dto.VoteablePlaylistDto", null)
                        .WithMany("SongsInPlaylist")
                        .HasForeignKey("VoteablePlaylistDtoUuid");
                });

            modelBuilder.Entity("Vote_API.Models.Dto.VoteablePlaylistDto", b =>
                {
                    b.HasOne("Vote_API.Models.Dto.VoteDataDto", null)
                        .WithMany("VoteablePlaylistCollection")
                        .HasForeignKey("VoteDataDtoUuid");
                });

            modelBuilder.Entity("Vote_API.Models.Dto.VoteablePlaylistDto", b =>
                {
                    b.Navigation("SongsInPlaylist");

                    b.Navigation("Votes");
                });

            modelBuilder.Entity("Vote_API.Models.Dto.VoteDataDto", b =>
                {
                    b.Navigation("VoteablePlaylistCollection");
                });
#pragma warning restore 612, 618
        }
    }
}
